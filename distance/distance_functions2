import scipy.spatial.distance as dist
import seaborn as sns

# Define example probability distributions for Jensen-Shannon and Bhattacharyya Distance
P = np.array([0.2, 0.3, 0.5])
Q = np.array([0.1, 0.4, 0.5])

# Jensen-Shannon Divergence (Symmetric KL Divergence)
js_divergence = dist.jensenshannon(P, Q)

# Bhattacharyya Distance (similar to Jensen-Shannon but using sqrt product)
bhattacharyya_distance = -np.log(np.sum(np.sqrt(P * Q)))

# Example categorical distributions for Earth Moverâ€™s Distance
P_earth = np.array([0.1, 0.2, 0.7])
Q_earth = np.array([0.3, 0.3, 0.4])

# Bray-Curtis Distance for comparison
braycurtis_distance = dist.braycurtis(P, Q)

# Create visualizations
fig, axes = plt.subplots(1, 3, figsize=(18, 5))
fig.suptitle("Visual Representation of Non-Euclidean Distance Measures", fontsize=16)

# Jensen-Shannon Divergence Visualization (Probability Bar Chart)
axes[0].bar(["P1", "P2", "P3"], P, alpha=0.6, label="Distribution P", color="blue")
axes[0].bar(["P1", "P2", "P3"], Q, alpha=0.6, label="Distribution Q", color="red")
axes[0].set_title(f"Jensen-Shannon Divergence\nValue: {js_divergence:.3f}")
axes[0].legend()

# Bhattacharyya Distance Visualization
axes[1].bar(["P1", "P2", "P3"], np.sqrt(P * Q), alpha=0.7, color="purple", label="Overlap (P*Q)")
axes[1].set_title(f"Bhattacharyya Distance\nValue: {bhattacharyya_distance:.3f}")
axes[1].legend()

# Bray-Curtis Distance Visualization (Categorical Similarity)
sns.heatmap([[0, braycurtis_distance], [braycurtis_distance, 0]], annot=True, cmap="coolwarm", ax=axes[2])
axes[2].set_xticklabels(["P", "Q"])
axes[2].set_yticklabels(["P", "Q"])
axes[2].set_title(f"Bray-Curtis Distance\nValue: {braycurtis_distance:.3f}")

plt.tight_layout(rect=[0, 0, 1, 0.94])
plt.show()
